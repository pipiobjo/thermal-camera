<!DOCTYPE HTML>
<html>

<head>
    <title>ESP Web Server</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="data:,">
    <style>
        html {
            font-family: Arial, Helvetica, sans-serif;
            text-align: center;
        }

        h1 {
            font-size: 1.8rem;
            color: white;
        }

        h2 {
            font-size: 1.5rem;
            font-weight: bold;
            color: #143642;
        }

        .topnav {
            overflow: hidden;
            background-color: #143642;
        }

        body {
            margin: 0;
        }

        .content {
            padding: 30px;
            max-width: 600px;
            margin: 0 auto;
        }

        .card {
            background-color: #F8F7F9;
            ;
            box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);
            padding-top: 10px;
            padding-bottom: 20px;
        }

        .button {
            padding: 15px 50px;
            font-size: 24px;
            text-align: center;
            outline: none;
            color: #fff;
            background-color: #0f8b8d;
            border: none;
            border-radius: 5px;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        }

        /*.button:hover {background-color: #0f8b8d}*/
        .button:active {
            background-color: #0f8b8d;
            box-shadow: 2 2px #CDCDCD;
            transform: translateY(2px);
        }

        .state {
            font-size: 1.5rem;
            color: #8c8c8c;
            font-weight: bold;
        }

        .canvasRoundCorders {
            border-radius: 10px;
            background: #F4F6F6;
            box-shadow: 2px 2px #ABB2B9;
            padding: 3px;
            width: 600px;
            height: 300px;
        }
    </style>
    <title>ESP Web Server</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="data:,">
    <script src='https://www.dukelearntoprogram.com/course1/common/js/image/SimpleImage.js'></script>
    <!-- <script src="http://${window.location.hostname}/simpleImage.js"></script> -->
</head>

<body>
    <div class="topnav">
        <h1>ESP WebSocket Server</h1>
    </div>
    <div class="content">
        <div class="card">
            <h2>Output - GPIO 2</h2>
            <canvas id='canvasTemp' class='canvasRoundCorders'></canvas>
            <p class="state">state: <span id="state">%STATE%</span></p>
            <p><button id="button" class="button">Toggle</button></p>
        </div>
    </div>

    <script>
        var gateway = `ws://${window.location.hostname}:81/ws`;
        var websocket;
        window.addEventListener('load', onLoad);

        function initWebSocket() {
            console.log('Trying to open a WebSocket connection...');
            websocket = new WebSocket(gateway);
            websocket.onopen = onOpen;
            websocket.onclose = onClose;
            websocket.onmessage = onMessage; // <-- add this line
        }

        function onOpen(event) {
            console.log('Connection opened');
        }

        function onClose(event) {
            console.log('Connection closed');
            setTimeout(initWebSocket, 2000);
        }

        function renderTemps(temps) {
            var canvas = document.getElementById("canvasTemp");
            var width = canvas.width;
            var height = canvas.height;
            var img = new SimpleImage(32, 24);
            var ctx = canvas.getContext('2d');
            console.log(width, height);
            for (var pix of img.values()) {
                var x = pix.getX();
                var y = pix.getY();
                if (x >= Math.floor(width / height)) {
                    pix.setRed(255);
                    pix.setGreen(0);
                    pix.setBlue(0);
                } else {
                    pix.setRed(0);
                    pix.setGreen(0);
                    pix.setBlue(0);
                }
            }
            img.drawTo(canvas);
        }

        function onMessage(event) {
            var wsResult = event.data
            wsResult =
                "27.89,26.83,26.14,26.07,25.75,26.40,29.26,30.12,29.12,30.08,26.53,26.87,27.11,26.79,26.97,26.67,26.86,26.75,27.08,27.14,27.99,28.11,27.56,27.59,28.22,28.52,32.01,33.79,34.66,34.65,33.14,32.50,27.26,26.94,26.18,25.51,25.96,26.74,29.50,30.43,29.38,29.73"

            var temps = JSON.parse(wsResult);
            console.log(temps);
            renderTemps(temps);
        }

        function onLoad(event) {
            // initWebSocket();

            initButton();
        }

        function initButton() {
            document.getElementById('button').addEventListener('click', toggle);
        }

        function toggle() {
            // websocket.send('toggle');
            var wsResult =
                "[27.89,26.83,26.14,26.07,25.75,26.40,29.26,30.12,29.12,30.08,26.53,26.87,27.11,26.79,26.97,26.67,26.86,26.75,27.08,27.14,27.99,28.11,27.56,27.59,28.22,28.52,32.01,33.79,34.66,34.65,33.14,32.50,27.26,26.94,26.18,25.51,25.96,26.74,29.50,30.43,29.38,29.73]"

            var temps = JSON.parse(wsResult);
            renderTemps(temps);
        }
    </script>
</body>

</html>