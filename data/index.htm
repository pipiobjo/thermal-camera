<!DOCTYPE HTML>
<html>

<head>
    <title>ESP Web Server</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="data:,">
    <style>
        html {
            font-family: Arial, Helvetica, sans-serif;
            text-align: center;
        }

        h1 {
            font-size: 1.8rem;
            color: white;
        }

        h2 {
            font-size: 1.5rem;
            font-weight: bold;
            color: #143642;
        }

        .topnav {
            overflow: hidden;
            background-color: #143642;
        }

        body {
            margin: 0;
        }

        .content {
            padding: 30px;
            max-width: 80%;
            margin: 0 auto;
        }

        .card {
            background-color: #F8F7F9;
            ;
            box-shadow: 2px 2px 12px 1px rgba(140, 140, 140, .5);
            padding-top: 10px;
            padding-bottom: 20px;
        }

        .button {
            padding: 15px 50px;
            font-size: 24px;
            text-align: center;
            outline: none;
            color: #fff;
            background-color: #0f8b8d;
            border: none;
            border-radius: 5px;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        }

        /*.button:hover {background-color: #0f8b8d}*/
        .button:active {
            background-color: #0f8b8d;
            box-shadow: 2 2px #CDCDCD;
            transform: translateY(2px);
        }

        .state {
            font-size: 1.5rem;
            color: #8c8c8c;
            font-weight: bold;
        }

        .canvasRoundCorders {
            border-radius: 10px;
            background: #F4F6F6;
            box-shadow: 2px 2px #ABB2B9;
            padding: 3px;
            width: 600px;
            height: 300px;
        }
    </style>
    <title>ESP8266 - Thermalcam</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="data:,">
</head>

<body>
    <div class="topnav">
        <h1 id="header"></h1>
    </div>
    <!-- <div class="content"> -->
    <div>
        <div id="canvas-container">
            <!-- <div id="canvas-container" class="card"> -->
            <!-- <canvas id="canvas" width="32" height="24" style="width:100%"></canvas> -->
            <canvas id="canvas" width="32" height="24" style="width:90%"></canvas>
            <!-- <h2>Output - GPIO 2</h2> -->
            <!-- <canvas id='canvasTemp' class='canvasRoundCorders'></canvas> -->
            <!-- <p class="state">state: <span id="state">%STATE%</span></p> -->
            <!-- <p><button id="button" class="button">Toggle</button></p> -->
            <!-- <img style="width:100%;" id="image"> -->


            <!-- <div id="output">test</div> -->
        </div>
    </div>
    <script>
        var gateway = `ws://${window.location.hostname}:81/ws`;
        gateway = 'ws://192.168.4.1:81/ws'

        var websocket;
        var RGB_MAX = 255;
        var RGB_MIN = 0;
        var SENSOR_MAX = 30;
        var SENSOR_MIN = 22;

        function calculateRedValue(sensorValue) {
            return (RGB_MAX - RGB_MIN) / (SENSOR_MAX - SENSOR_MIN) * (sensorValue - SENSOR_MIN) + RGB_MIN;
        }


        function startTestWarn() {
            var output = document.getElementById('output');
            output.innerHTML = 'Calculating...';
        }

        function buildImageData(temps, ctx) {
            // let tempArray = Array.from(Array(32), () => new Array(24))


            // get the imageData and pixel array from the canvas
            var imgData = ctx.getImageData(0, 0, 32, 24);
            var data = imgData.data;
            var newMaxValue = SENSOR_MAX;
            var newMinValue = SENSOR_MIN;

            // manipulate some pixel elements
            for (var i = 0; i < temps.length; ++i) {
                var x = Math.trunc(i / 24);
                var y = 0;
                if (x > 0) {
                    y = Math.trunc(i / 32);
                }
                var r = calculateRedValue(temps[i]);
                var g = 0;
                var b = 255 - r;
                var off = (i) * 4;
                data[off] = r;
                data[off + 1] = g;
                data[off + 2] = b;
                data[off + 3] = 255;

                // check min max values
                if (temps[i] > SENSOR_MAX) {
                    newMaxValue = temps[i];
                }

                if (temps[i] < SENSOR_MIN) {
                    newMinValue = temps[i];
                }
            }

            SENSOR_MAX = newMaxValue;
            SENSOR_MIN = newMinValue;
            let newHeaderMinString = "Min Temp: " + newMinValue + "°C";
            console.log("new max value", newMaxValue);

            let newHeaderMaxString = " Max Temp: " + newMaxValue + "°C";
            document.getElementById("header").innerHTML = newHeaderMinString +
                " &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" +
                newHeaderMaxString;
            console.log("new min value", newMinValue);
            return imgData;
        }

        function imageData(temps) {
            console.time("image-data-time");

            let canvas = document.getElementById('canvas');
            let ctx = canvas.getContext('2d');

            let intViewportWidth = window.innerWidth ||
                document.documentElement.clientWidth ||
                document.body.clientWidth;
            let intViewportHeight = window.innerHeight ||
                document.documentElement.clientHeight ||
                document.body.clientHeight;


            let imgData = buildImageData(temps, ctx)
            // // put the modified pixels back on the canvas
            ctx.putImageData(imgData, 0, 0);
            var imageObject = new Image();
            imageObject.style.width = "32px";
            imageObject.style.height = "24px";
            imageObject.onload = function () {
                console.time("scale-image-data-time");
                ctx.drawImage(imageObject, 0, 0);
                console.timeEnd("scale-image-data-time");

            }
            imageObject.src = canvas.toDataURL();

            canvas.style.width = "95%";
            canvas.style.height = intViewportHeight * 0.90 + "px";
            // append the new img object to the page
            // document.body.appendChild(imageObject);
            console.timeEnd("image-data-time");

        }




        function initWebSocket() {
            console.log('Trying to open a WebSocket connection...');
            websocket = new WebSocket(gateway);
            websocket.onopen = onOpen;
            websocket.onclose = onClose;
            websocket.onmessage = onMessage; // <-- add this line
        }

        function onOpen(event) {
            console.log('Connection opened');
        }

        function onClose(event) {
            console.log('Connection closed');
            setTimeout(initWebSocket, 2000);
        }

        // function renderTemps(temps) {
        //     var canvas = document.getElementById("canvasTemp");
        //     var width = canvas.width;
        //     var height = canvas.height;
        //     var img = new SimpleImage(32, 24);
        //     var ctx = canvas.getContext('2d');
        //     for (var pix of img.values()) {
        //         var x = pix.getX();
        //         var y = pix.getY();
        //         var redValue = calculateRedValue(temps[x + y * 32]);
        //         pix.setRed(redValue);
        //         pix.setGreen(0);
        //         pix.setBlue(255 - redValue);
        //     }
        //     img.drawTo(canvas);
        // }

        function onMessage(event) {
            var wsResult = event.data
            var temps = JSON.parse(wsResult);
            console.log(temps);
            // renderTemps(temps);
            imageData(temps);
        }

        function onLoad(event) {

            temps = [26, 25, 25, 25, 26, 25, 25, 25, 25, 24, 24, 24, 25, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23,
                23, 23, 23, 23, 23, 22, 22, 26, 25, 25, 26, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24,
                24, 23, 23, 24, 23, 23, 23, 23, 23, 23, 23, 23, 22, 23, 26, 26, 25, 25, 25, 25, 25, 25, 25, 25, 24,
                24, 25, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 22, 23, 25, 26, 25, 26,
                25, 25, 25, 25, 25, 25, 24, 25, 24, 24, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 24, 23, 23, 23,
                23, 22, 22, 26, 25, 25, 25, 25, 25, 25, 24, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 24, 23, 23,
                23, 23, 23, 22, 23, 23, 23, 23, 23, 22, 25, 26, 25, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24,
                24, 24, 24, 24, 24, 23, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 26, 25, 25, 25, 25, 25, 25, 24,
                24, 25, 24, 24, 24, 24, 24, 24, 24, 24, 23, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25,
                26, 25, 25, 25, 25, 25, 25, 24, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 24, 23, 23,
                23, 23, 23, 23, 23, 23, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24,
                24, 24, 24, 24, 23, 23, 23, 23, 23, 23, 23, 23, 23, 25, 25, 25, 26, 25, 25, 25, 25, 25, 25, 24, 25,
                24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 24, 23, 23, 23, 23, 23, 24, 23, 24, 25, 25, 25, 25, 25,
                25, 24, 24, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 23, 23, 24,
                23, 23, 25, 25, 25, 25, 25, 25, 25, 25, 24, 24, 24, 24, 24, 25, 24, 24, 24, 24, 24, 24, 24, 24, 24,
                24, 24, 24, 24, 24, 23, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 24, 25, 24, 24, 24, 24, 24, 24,
                25, 24, 24, 24, 24, 24, 24, 24, 25, 24, 24, 24, 25, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 24,
                24, 24, 24, 24, 24, 24, 24, 24, 25, 24, 25, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 24, 24, 25, 25,
                25, 25, 25, 25, 25, 24, 25, 24, 24, 24, 25, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 27,
                27, 28, 27, 26, 25, 25, 25, 25, 25, 25, 25, 24, 25, 25, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25,
                25, 26, 25, 25, 25, 25, 28, 28, 29, 29, 27, 26, 25, 25, 25, 25, 25, 25, 24, 24, 25, 25, 25, 25, 25,
                24, 25, 24, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 28, 28, 30, 30, 29, 28, 25, 25, 25, 25, 25, 25,
                25, 24, 24, 25, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 25, 26, 26, 27, 28, 30, 29, 30, 30,
                30, 25, 25, 25, 25, 25, 24, 24, 24, 25, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 25, 26, 26,
                28, 28, 29, 30, 30, 30, 28, 29, 25, 25, 25, 25, 25, 25, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
                25, 26, 26, 26, 26, 26, 28, 28, 28, 29, 30, 30, 30, 28, 28, 25, 25, 25, 25, 25, 24, 25, 25, 25, 25,
                25, 25, 25, 25, 25, 25, 26, 25, 26, 26, 27, 26, 27, 29, 28, 28, 30, 31, 31, 30, 28, 28, 25, 25, 25,
                25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 25, 26, 26, 26, 26, 27, 28, 28, 28, 28, 31, 31,
                31, 30, 28, 30, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 27, 27,
                28, 28, 29, 28, 28, 30, 30, 31, 30, 29, 29, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
                25, 25, 26, 26, 26, 27, 28, 28, 28, 28, 28, 29, 30, 30, 30, 30, 30, 30
            ]
            // imageData(temps);
            initWebSocket();

        }

        // function initButton() {
        //     document.getElementById('button').addEventListener('click', toggle);
        // }

        function toggle() {
            // websocket.send('toggle');
            // var wsResult =
            //     "[27.89,26.83,26.14,26.07,25.75,26.40,29.26,30.12,29.12,30.08,26.53,26.87,27.11,26.79,26.97,26.67,26.86,26.75,27.08,27.14,27.99,28.11,27.56,27.59,28.22,28.52,32.01,33.79,34.66,34.65,33.14,32.50,27.26,26.94,26.18,25.51,25.96,26.74,29.50,30.43,29.38,29.73]"

            // var temps = JSON.parse(wsResult);
            // renderTemps(temps);
        }


        window.addEventListener('load', onLoad);
    </script>
</body>

</html>